name: Build and Deploy Flyway Migration Job

on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: ghcr.io/${{ github.repository }}
  IMAGE_TAG: ${{ github.sha }}
  RELEASE_NAME: db-migration-${{ github.sha }}
  JOB_NAME: db-migration-${{ github.sha }}

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          no-cache: true

  deploy:
    name: Deploy Helm Job to K3s
    runs-on: ubuntu-latest
    needs: build-and-push
    environment: production

    steps:
      - name: Checkout Helm Values Repo
        uses: actions/checkout@v4
        with:
          repository: darc-software/helm-values
          path: helm-values
          ssh-key: ${{ secrets.HELM_REPO_DEPLOY_KEY }}

      - name: Deploy via SSH and Helm
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.K3S_HOST }}
          username: ${{ secrets.K3S_USER }}
          key: ${{ secrets.K3S_SSH_KEY }}
          script: |
            set -e
            echo "Navigating to Helm chart..."
            cd ~/helm-values/charts/db-migration

            echo "üß™ Checking chart contents:"
            ls -la
            cat Chart.yaml || echo "‚ùå Missing Chart.yaml"

            echo "üöÄ Deploying Helm release $RELEASE_NAME"
            helm upgrade --install "$RELEASE_NAME" . \
              --namespace devincooper \
              --create-namespace \
              --set image.repository=$IMAGE_NAME \
              --set image.tag=$IMAGE_TAG \
              --set jobName=$JOB_NAME \
              --atomic --wait

            echo "‚è≥ Waiting for job to complete..."
            if ! kubectl wait --for=condition=complete --timeout=90s job/$JOB_NAME -n devincooper; then
              echo "‚ùå Flyway job failed ‚Äî rolling back"
              echo "üîç Logs:"
              kubectl logs job/$JOB_NAME -n devincooper || true
              echo "üßπ Uninstalling failed Helm release: $RELEASE_NAME"
              helm uninstall $RELEASE_NAME -n devincooper || true
              exit 1
            else
              echo "‚úÖ Migration job $JOB_NAME completed successfully."
            fi